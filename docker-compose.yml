version: '3'
services:
  app:
    build: .
    ports:
      - "3000:3000"
    volumes:
      - ./src:/usr/src/app/src
    depends_on:
      - redis
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379

  redis:
    image: "redis:alpine"
    container_name: "redis_server"
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  prometheus:
    image: prom/prometheus
    container_name: "prometheus"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml  # Asegúrate de que prometheus.yml esté en la raíz del proyecto
    ports:
      - "9090:9090"
    depends_on:
      - cadvisor
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"  # Configura el archivo de configuración explícitamente

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: "cadvisor"
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro

  grafana:
    image: grafana/grafana:latest
    container_name: "grafana"
    ports:
      - "3001:3000"  # Grafana usa el puerto 3000 internamente, mapeado a 3001 en el host
    depends_on:
      - prometheus
    volumes:
      - grafana_data:/var/lib/grafana  # Persiste datos de Grafana
      - ./grafana/provisioning:/etc/grafana/provisioning  # Configuración de provisión
      - ./grafana/dashboards:/var/lib/grafana/dashboards  # Dashboards JSON
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning  # Asegura que Grafana use esta ruta para cargar dashboards y datasources

volumes:
  redis_data:
    driver: local
  grafana_data:
    driver: local
